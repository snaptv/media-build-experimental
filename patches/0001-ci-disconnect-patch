From b2c80980fa0d4d8e51529114d9ebc1f005fc2066 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?P=C3=A5l=20Saugstad?= <pals@snap.tv>
Date: Mon, 16 Dec 2013 16:29:45 +0100
Subject: =?UTF-8?q?Let=20the=20driver=20interface=20make=20it=20possible?=
 =?UTF-8?q?=20to=20disconnect=0Afrom=20any=20Common=20Interface=20resource?=

This modification is made by us since we want the
connect/disconnect procedure from higher levels to be
simplified.

Without this modification, the higher level would have to
disconnect CI resources based on which CI resource was previously
connected. With this modification, the higher level can instruct
the source to disconnect from any CI resource it might be
connected to, regardless of which CI was connected before.
---
 drivers/media/dvb/ddbridge/ddbridge-core.c | 19 +++++++++++++++++++
 drivers/media/dvb/ddbridge/ddbridge.h      |  1 +
 2 files changed, 20 insertions(+)

diff --git a/linux/drivers/media/pci/ddbridge/ddbridge-core.c b/linux/drivers/media/pci/ddbridge/ddbridge-core.c
index 68e71ce..537e079 100644
--- a/linux/drivers/media/pci/ddbridge/ddbridge-core.c
+++ b/linux/drivers/media/pci/ddbridge/ddbridge-core.c
@@ -145,6 +145,22 @@ done:
 	return 0;
 }
 
+static int disconnect_input(u32 i)
+{
+	struct ddb *idev = ddbs[(i >> 4) & 0x1f];
+	struct ddb_input *input;
+
+	if (!idev)
+		return -EINVAL;
+
+	input = &idev->input[i & 7];
+	if (input->connected_ci_port) {
+		ddb_unredirect(input->connected_ci_port);
+		input->connected_ci_port = NULL;
+	}
+	return 0;
+}
+
 static int ddb_redirect(u32 i, u32 p)
 {
 	struct ddb *idev = ddbs[(i >> 4) & 0x1f];
@@ -152,6 +168,8 @@ static int ddb_redirect(u32 i, u32 p)
 	struct ddb *pdev = ddbs[(p >> 4) & 0x1f];
 	struct ddb_port *port;
 
+	if (p == 8) return disconnect_input(i);
+
 	if (!idev->has_dma || !pdev->has_dma)
 		return -EINVAL;
 	if (!idev || !pdev)
@@ -184,6 +202,7 @@ static int ddb_redirect(u32 i, u32 p)
 			input2->redi = input;
 	}
 	input->redo = port->output;
+	input->connected_ci_port = port;
 	port->output->redi = input;
 
 	ddb_redirect_dma(input->port->dev, input->dma, port->output->dma);
diff --git a/linux/drivers/media/pci/ddbridge/ddbridge.h b/linux/drivers/media/pci/ddbridge/ddbridge.h
index 93423e3..cc5f436 100644
--- a/linux/drivers/media/pci/ddbridge/ddbridge.h
+++ b/linux/drivers/media/pci/ddbridge/ddbridge.h
@@ -239,6 +239,7 @@ struct ddb_io {
 	struct ddb_dma        *dma;
 	struct ddb_io         *redo;
 	struct ddb_io         *redi;
+	struct ddb_port       *connected_ci_port;	
 };
 
 #define ddb_output ddb_io
-- 
1.9.1

